server.port=8082
spring.application.name=api-gateway
eureka.client.service-url.defaultZone=http://localhost:8010/eureka

spring.cloud.gateway.routes[0].id=users-status-check
spring.cloud.gateway.discovery.locator.enabled=true
eureka.instance.prefer-ip-address=true
spring.cloud.gateway.discovery.locator.lower-case-service-id=true

#configuration that will make API gateway fetch these details from Eureka
#lb stands for load balancer
#always verify the microservice name - in this case, users-ws
spring.cloud.gateway.routes[0].uri=lb://users-ws

#Below is additional configuration so that even if the address of our microservice(s) change, the client application can still communicate with it,
#provided that the request is sent via API gateway

#match http request using headers. Works like an if statement - if condition matches, then the request will be routed to destination uri
# Como estava na aula anterior � sec��o 13:  spring.cloud.gateway.routes[0].predicates[0]=Path=/users/status/check
spring.cloud.gateway.routes[0].predicates[0]=Path=/users-ws/users/status/check
#method predicate - the API gateway will route http request only if both conditions match
#it is possible to check for more methods - , POST, PUT, DELETE
spring.cloud.gateway.routes[0].predicates[1]=Method=GET

#a filter to remove all request cookies, which removes request header
spring.cloud.gateway.routes[0].filters[0]=RemoveRequestHeader=Cookie

# internal filter - using regular expression - to route a request to an internal path within our microservice
spring.cloud.gateway.routes[0].filters[1]=RewritePath=/users-ws/(?<segment>.*), /$\{segment}

spring.cloud.gateway.routes[1].id=users-ws
spring.cloud.gateway.routes[1].uri=lb://users-ws
spring.cloud.gateway.routes[1].predicates[0]=Path=/users-ws/users
spring.cloud.gateway.routes[1].predicates[1]=Method=POST
spring.cloud.gateway.routes[1].filters[0]=RemoveRequestHeader=Cookie
spring.cloud.gateway.routes[1].filters[1]=RewritePath=/users-ws/(?<segment>.*), /$\{segment}

spring.cloud.gateway.routes[2].id=users-ws-h2-console
spring.cloud.gateway.routes[2].uri=lb://users-ws
spring.cloud.gateway.routes[2].predicates[0]=Path=/users-ws/h2-console
spring.cloud.gateway.routes[2].predicates[1]=Method=GET
spring.cloud.gateway.routes[2].filters[0]=RemoveRequestHeader=Cookie
spring.cloud.gateway.routes[2].filters[1]=RewritePath=/users-ws/(?<segment>.*), /$\{segment}

spring.cloud.gateway.routes[3].id=users-ws-login
spring.cloud.gateway.routes[3].uri=lb://users-ws
spring.cloud.gateway.routes[3].predicates[0]=Path=/users-ws/login
spring.cloud.gateway.routes[3].predicates[1]=Method=POST
spring.cloud.gateway.routes[3].filters[0]=RemoveRequestHeader=Cookie
spring.cloud.gateway.routes[3].filters[1]=RewritePath=/users-ws/(?<segment>.*), /$\{segment}
